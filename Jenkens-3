pipeline {
    agent {
        docker { image 'docker.io/liquibase/liquibase:4.25.1' }

    }
    stages {
        stage('Status') {
            steps {
                sh 'liquibase status --url=jdbc:mysql://192.168.67.128:3306/liquibase --changeLogFile=my_app-wrapper.xml --username=newuser --password=P@ssw0rd'
            }
        }
        stage('Liquibase Checks') {
            steps {
                // Running Liquibase with the checks enabled
                script {
                    def status = sh(script: 'liquibase --checks-settings-file=liquibase.checks-settings.conf updateSQL --url=jdbc:mysql://192.168.67.128:3306/liquibase --changeLogFile=my_app-wrapper.xml --username=newuser --password=P@ssw0rd', returnStatus: true)
                    if (status != 0) {
                        error "Liquibase checks failed. Please review the Liquibase output for details."
                    }
                }
            }
        }
        stage('Update') {
            steps {
                sh 'liquibase update --url=jdbc:mysql://192.168.67.128:3306/liquibase --changeLogFile=my_app-wrapper.xml --username=newuser --password=P@ssw0rd'
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
